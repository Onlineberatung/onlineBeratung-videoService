<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<description>Caritas Online Beratung: VideoService</description>

	<groupId>de.caritas.cob</groupId>
	<artifactId>videoservice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>VideoService</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.12</version>
		<relativePath/>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>11</java.version>
		<keycloak.version>17.0.0</keycloak.version>
		<!-- force at least version 2.16 due to https://logging.apache.org/log4j/2.x/security.html -->
		<log4j.version>2.19.0</log4j.version>
		<openapi-generator-maven-plugin.version>6.2.1</openapi-generator-maven-plugin.version>
		<springfox-boot-starter.version>3.0.0</springfox-boot-starter.version>
		<jackson-databind-nullable.version>0.2.3</jackson-databind-nullable.version>
		<spring-swagger-ui.version>2.10.0</spring-swagger-ui.version>
		<spring-security-core.version>5.7.5</spring-security-core.version>
		<ehcache.version>2.10.9.2</ehcache.version>
		<javax.ws.rs-api.version>2.1.1</javax.ws.rs-api.version>
		<java-jwt.version>3.12.1</java-jwt.version>
		<commons-lang3.version>3.11</commons-lang3.version>
		<commons-collections4.version>4.4</commons-collections4.version>
		<h2.version>2.1.214</h2.version>
		<liquibase-core.version>4.9.1</liquibase-core.version>
		<hibernate.validator.version>8.0.0.Final</hibernate.validator.version>
		<liquibase.maven.plugin.version>4.1.1</liquibase.maven.plugin.version>

	</properties>

	<dependencies>
		<!-- Spring Boot dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<!-- Spring dependencies -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security-core.version}</version>
		</dependency>

		<!-- caching dependencies -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>${ehcache.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-utils</artifactId>
			<version>3.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.github.jknack</groupId>
			<artifactId>handlebars</artifactId>
			<version>4.3.1</version>
		</dependency>

		<!-- OpenApi/Swagger dependencies -->
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>openapi-generator-maven-plugin</artifactId>
			<version>${openapi-generator-maven-plugin.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>${jackson-databind-nullable.version}</version>
		</dependency>

		<!-- json dependencies -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20230227</version>
		</dependency>

		<!-- SpringFox: generate YAML file from POJOs and generate documentation -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-boot-starter</artifactId>
			<version>${springfox-boot-starter.version}</version>
		</dependency>
		<!-- Keycloak dependencies -->
		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-spring-security-adapter</artifactId>
			<version>${keycloak.version}</version>
		</dependency>
		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-spring-boot-starter</artifactId>
			<version>${keycloak.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>${javax.ws.rs-api.version}</version>
		</dependency>

		<!-- Persistence -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-maven-plugin</artifactId>
			<version>${liquibase.maven.plugin.version}</version>
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>${liquibase-core.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
		</dependency>

		<!-- JWT builder dependency -->
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>${java-jwt.version}</version>
		</dependency>

		<!-- Lombok dependencies -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Apache Commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons-collections4.version}</version>
		</dependency>

		<!-- Spring actuator  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>powermock-module-junit4</artifactId>
			<groupId>org.powermock</groupId>
			<scope>test</scope>
			<version>2.0.2</version>
		</dependency>
		<dependency>
			<artifactId>powermock-api-mockito2</artifactId>
			<groupId>org.powermock</groupId>
			<scope>test</scope>
			<version>2.0.2</version>
		</dependency>
		<!-- EasyRandom -->
		<dependency>
			<groupId>org.jeasy</groupId>
			<artifactId>easy-random-core</artifactId>
			<version>4.3.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.fridujo</groupId>
			<artifactId>rabbitmq-mock</artifactId>
			<version>1.1.1</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/net.javacrumbs.json-unit/json-unit -->
		<dependency>
			<groupId>net.javacrumbs.json-unit</groupId>
			<artifactId>json-unit</artifactId>
			<version>2.25.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-to-slf4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>



	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.keycloak.bom</groupId>
				<artifactId>keycloak-adapter-bom</artifactId>
				<version>${keycloak.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>${project.name}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- OpenApi codegen maven plugin: generates api stubs -->
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>6.2.0</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<configOptions>
								<interfaceOnly>true</interfaceOnly>
								<sourceFolder>/</sourceFolder>
							</configOptions>
							<inputSpec>${project.basedir}/api/videoservice.yaml</inputSpec>
							<generatorName>spring</generatorName>
							<apiPackage>${project.groupId}.${project.artifactId}.generated.api.controller
							</apiPackage>
							<modelPackage>${project.groupId}.${project.artifactId}.api.model</modelPackage>
							<generateSupportingFiles>true</generateSupportingFiles>
							<output>target/generated-sources</output>
						</configuration>
					</execution>
					<!-- Generate client API for UserService -->
					<execution>
						<id>userservice-client-model</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<configOptions>
								<sourceFolder>/</sourceFolder>
								<library>resttemplate</library>
								<dateLibrary>java8</dateLibrary>
							</configOptions>
							<inputSpec>${project.basedir}/services/userservice.yaml</inputSpec>
							<generatorName>java</generatorName>
							<generateApis>true</generateApis>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<apiPackage>${project.groupId}.${project.artifactId}.userservice.generated.web
							</apiPackage>
							<modelPackage>
								${project.groupId}.${project.artifactId}.userservice.generated.web.model
							</modelPackage>
						</configuration>
					</execution>
					<!-- Generate client API for LiveService -->
					<execution>
						<id>liveservice-client-model</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<configOptions>
								<sourceFolder>/</sourceFolder>
								<library>resttemplate</library>
								<dateLibrary>java8</dateLibrary>
							</configOptions>
							<inputSpec>${project.basedir}/services/liveservice.yaml</inputSpec>
							<generatorName>java</generatorName>
							<generateApis>true</generateApis>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<apiPackage>${project.groupId}.${project.artifactId}.liveservice.generated.web
							</apiPackage>
							<modelPackage>
								${project.groupId}.${project.artifactId}.liveservice.generated.web.model
							</modelPackage>
						</configuration>
					</execution>
					<!-- Generate client API for MessageService -->
					<execution>
						<id>messageservice-client-model</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<configOptions>
								<sourceFolder>/</sourceFolder>
								<library>resttemplate</library>
								<dateLibrary>java8</dateLibrary>
							</configOptions>
							<inputSpec>${project.basedir}/services/messageservice.yaml</inputSpec>
							<generatorName>java</generatorName>
							<generateApis>true</generateApis>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<apiPackage>${project.groupId}.${project.artifactId}.messageservice.generated.web
							</apiPackage>
							<modelPackage>
								${project.groupId}.${project.artifactId}.messageservice.generated.web.model
							</modelPackage>
						</configuration>
					</execution>
					<!-- Generate client API for StatisticsService -->
					<execution>
						<id>statistics-type-service-client-model</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<configOptions>
								<sourceFolder>/</sourceFolder>
								<library>resttemplate</library>
								<dateLibrary>java8</dateLibrary>
							</configOptions>
							<inputSpec>${project.basedir}/services/statisticsservice.yaml</inputSpec>
							<generatorName>java</generatorName>
							<generateApis>true</generateApis>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<modelPackage>
								${project.groupId}.${project.artifactId}.statisticsservice.generated.web.model
							</modelPackage>
						</configuration>
					</execution>
					<!-- Generate client API for tenant service -->
					<execution>
						<id>tenantservice-client-model</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<configOptions>
								<sourceFolder>/</sourceFolder>
								<library>resttemplate</library>
								<dateLibrary>java8</dateLibrary>
							</configOptions>
							<inputSpec>${project.basedir}/services/tenantservice.yaml</inputSpec>
							<generatorName>java</generatorName>
							<generateApis>true</generateApis>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<apiPackage>${project.groupId}.${project.artifactId}.tenantservice.generated.web</apiPackage>
							<modelPackage>${project.groupId}.${project.artifactId}.tenantservice.generated.web.model</modelPackage>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Code style check -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<configuration>
							<configLocation>google_checks_light.xml</configLocation>
							<encoding>UTF-8</encoding>
							<failsOnError>true</failsOnError>
							<consoleOutput>true</consoleOutput>
							<failOnViolation>true</failOnViolation>
							<logViolationsToConsole>true</logViolationsToConsole>
							<violationSeverity>warning</violationSeverity>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Code style check -->
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>2.23.0</version>
				<configuration>
					<java>
						<toggleOffOn />
						<googleJavaFormat>
							<version>1.15.0</version>
							<style>GOOGLE</style>
						</googleJavaFormat>
					</java>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>compile</phase>
					</execution>
				</executions>
			</plugin>
			<!-- Surefire plugin version managed by Spring Boot -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>false</skipTests>
				</configuration>
				<executions>
					<execution>
						<id>unit-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skipTests>false</skipTests>
							<includes>
								<include>**/*Test.java</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>integration-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skipTests>false</skipTests>
							<includes>
								<include>**/*IT.*</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>local</id>
			<properties>
				<activeSpringProfile>local</activeSpringProfile>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<activeSpringProfile>dev</activeSpringProfile>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<activeSpringProfile>prod</activeSpringProfile>
			</properties>
		</profile>
	</profiles>

</project>
